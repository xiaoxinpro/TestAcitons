# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    paths: [ ".github/workflows/demo.yml" ]
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "demo"
  demo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: GitHub环境变量
        run: echo "${{ toJSON(github) }}"
      - name: 触发信息
        run: |
          echo "触发分支：${{ github.ref_name}}"
          echo "触发事件：${{ github.event_name }}"
          echo "版本信息：$(cat .version)"
      - name: 将环境变量写入 GITHUB_ENV
        run: |
          echo "TEST_VERSION=$(cat .version)" >> $GITHUB_ENV
          echo "BUILD_IMAGE=chishin/nginx-proxy-manager-zh" >> $GITHUB_ENV
          echo "BUILD_PLATFORM=linux/amd64,linux/arm64,linux/arm/7" >> $GITHUB_ENV
          echo "BUILD_VERSION=$(cat .version)" >> $GITHUB_ENV
          echo "输出定义的环境变量：${{ env.TEST_VERSION }} (需要在下级才能引用环境变量)"
      - name: 打印环境变量
        run: |
          echo "打印上级定义的环境变量：${{ env.TEST_VERSION }}"
          echo "直接引用环境变量：$TEST_VERSION"
      - name: 拼接环境变量 if push
        if: ${{ github.event_name == 'push'}}
        run: |
          echo "BUILD_TAG=-t ${BUILD_IMAGE}:${BUILD_VERSION} -t ${BUILD_IMAGE}:dev" >> $GITHUB_ENV
      - name: 拼接环境变量 if release
        if: ${{ github.event_name == 'release'}}
        run: |
          echo "BUILD_TAG=-t ${BUILD_IMAGE}:${BUILD_VERSION} -t ${BUILD_IMAGE}:${BUILD_VERSION%.*} -t ${BUILD_IMAGE}:${BUILD_VERSION%.*.*} -t ${BUILD_IMAGE}:release" >> $GITHUB_ENV
      - name: 输出拼接环境变量
        run: |
          echo "BUILD_TAG=$BUILD_TAG"
          echo "BUILD_IMAGE=$BUILD_IMAGE"
          echo "BUILD_PLATFORM=$BUILD_PLATFORM"
          echo "BUILD_VERSION=$BUILD_VERSION"
